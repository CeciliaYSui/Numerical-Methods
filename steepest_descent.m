% Cecilia Y. Sui % Homework #8 % Implement Steepest Descent Procedure (Ch13)% April 16, 2019% f = @(x,y) 25 .* x.^2 + y.^2, x0 = 1, y0 = 1   % g = % % f = @(x,y) (e.^x) .* (cos(x.*y).^2), x0 = -1, y0 = -1% g = function steepest_descent (f = @(x,y) 25 .* x.^2 + y.^2, x0 = 1, y0 = 1)  tolerance = 1e-6;  g = [inf;inf];    dx = 0.001;   dy = 0.001;   alpha = 0.001;     while norm(g) > tolerance     % calculate gradient by finite differences     f1 = f(x0-dx/2, y0);     f2 = f(x0+dx/2, y0);     gx = -(f2-f1)/dx;         f1 = f(x0, y0-dy/2);     f2 = f(x0, y0+dy/2);     gy = -(f2-f1)/dy;         % g is the gradient vector     g = [gx;gy];         % update guesses     x0 = x0 + alpha * gx;     y0 = y0 + alpha * gy;   endwhile   [x0, y0]
endfunction
