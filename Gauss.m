function [x,M] = Gauss(a, b)   [n,~] = size(a);   x = zeros(n,1);   for i = 1:n    l(i,:) = i;     smax = 0;      for j = 1:n      if (smax < abs(a(i,j)) )        smax = abs(a(i,j));          endif         endfor     s(i,:) = smax;   endfor  % initiate principal outer loop   % k - index of col where new 0s are created   for k = 1:(n-1)    rmax = 0;     for i = k:n      li = l(i,:);       r = abs( a(li,k)/s(li,:) );       if (r > rmax)         rmax = r;   % greatest ratio        j = i;      % index of rmax      endif    endfor    % exchange lj & lk    lj = l(j,:);     l(j,:) = l(k,:);     l(k,:) = lj;     for i = (k+1):n      li = l(i,:);       lk = l(k,:);       % stored multiplier in array a where the 0s were      xmult = a(li, k) / a(lk, k);       a(li,k) = xmult;       for j = (k+1) : n        a(li,j) = a(li, j) - (xmult)*a(lk,j);       endfor    endfor  endfor  s = zeros(n,1);   % forward elimination   for k = 1:(n-1)    for i = (k+1):n      li = l(i,:);       lk = l(k,:);       b(li,:) = b(li,:) - a(li,k) * b(lk,:);     endfor  endfor    % back substitution   ln = l(n,:);   x(n,:) = b(ln,:) / a(ln,n);   for i = (n-1):-1:1    li = l(i,:);     sum = b(li,:);     for j = (i+1):n      sum = sum - a(li,j) * x(j,:);     endfor    x(i,:) = sum / a(li,i);   endfor  M = a;   return
endfunction
